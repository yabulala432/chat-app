// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  username  String    @unique
  password  String
  avatar    String?
  isOnline  Boolean   @default(false)
  lastSeen  DateTime  @default(now())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  // Relations
  messages Message[]
  rooms    UserRoom[]
  
  @@map("users")
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  timestamp DateTime @default(now())
  
  // Relations
  userId Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  roomId Int?
  room   Room?  @relation(fields: [roomId], references: [id], onDelete: Cascade)
  
  @@map("messages")
}

model Room {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  isPrivate   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  
  // Relations
  messages Message[]
  users    UserRoom[]
  
  @@map("rooms")
}

model UserRoom {
  id     Int @id @default(autoincrement())
  userId Int
  roomId Int
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  
  joinedAt DateTime @default(now())
  
  @@unique([userId, roomId])
  @@map("user_rooms")
}